
#--------------------------------------------------------------------------
#
# This Gmake file will compile the PARAMESH library and create a
# set of library files to which you can link. To use it, make sure
# it is in the PARAMESH root directory.  
# It works by running gmake on the Makefile.gnu files which appear
# in the headers, source and mpi_source sub-directories.
# To simply create these PARAMESH library files, type
#     gmake -f Makefile.gnu
# when in the PARAMESH root directory. The library files will
# then be found in a newly created sub-directory called libs.
#
# If you type 
#     gmake -f Makefile.gnu Tests
# it will also compile and link the test programs in the Tests
# sub-directory. There is a file called Makefile.gnu inside Tests
# which is used.
# 
# To compile and link application files in a sub-directory called
# User_applic you could type
#     gmake -f Makefile.gnu User_applic
# provided you copy Makefile.gnu from Tests to User_applic, and modify
# it appropriately.
#
#
# Written : Ernest Mamikonyan        April 2002.
#
#--------------------------------------------------------------------------
export cur-dir := $(shell pwd)

# Set the location of the paramesh top directory
export paramesh_dir = $(cur-dir)

# 
USER_APP ?= your_app
USER_APP_DIR = $(paramesh_dir)/$(USER_APP)



# Define the fortran compiler
export FC = mpif90
#export FC = f90

#-----------------------------------------------
 
# Set the desired compilation flags

# ifort intel 8.0
#export FFLAGS = -g -check all -r8 -I$(paramesh_dir)/headers
# export FFLAGS = -O4 -r8 -I$(paramesh_dir)/headers

# 
# gfortran
# 
export FFLAGS = -O2 -fdefault-real-8 -I$(paramesh_dir)/headers -I$(USER_APP_DIR)


# Additional libraries to link to. 
# export ADD_LIB = /usr/lib32/libmpi.so


#-----------------------------------------------

# SHMEM or MPI ?
# uncomment to use SHMEM
#export SHMEM = 1

#--------------------------------------------------------------------------


.PHONY: all
ifdef SHMEM
all: libs headers source
else
all: libs headers mpi_source source
endif

.PHONY: headers
headers:
	$(MAKE) -C $(paramesh_dir)/$@ -f Makefile.gnu
	cp -f $(paramesh_dir)/headers/libmodules.a $(paramesh_dir)/libs

.PHONY: mpi_source
mpi_source: headers
	$(MAKE) -C $(paramesh_dir)/$@ -f Makefile.gnu
	cp -f $(paramesh_dir)/mpi_source/libmpi_paramesh.a $(paramesh_dir)/libs

.PHONY: source
source: headers
	$(MAKE) -C $(paramesh_dir)/$@ -f Makefile.gnu
	cp -f $(paramesh_dir)/source/libparamesh.a $(paramesh_dir)/libs

.PHONY: clean
clean:
	$(RM) -r *~ libs
	for dir in headers mpi_source source Tests $(USER_APP); do \
	  $(MAKE) -C $(paramesh_dir)/$$dir -f Makefile.gnu clean; \
	done

.PHONY: Tests
Tests: all
	$(MAKE) -C $(paramesh_dir)/$@ -f Makefile.gnu

# An example target to match an application directory name other than Tests
# in which the users application files are located.
.PHONY: $(USER_APP)
$(USER_APP): all
	$(MAKE) -C $(paramesh_dir)/$@ -f Makefile.gnu

libs:
	mkdir $@
